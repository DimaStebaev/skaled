
#include <skutils/eth_utils.h>
#include <algorithm>

#include <arpa/inet.h>

namespace skutils {

namespace eth {

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::string call_error_message_2_str( const vec_bytes& b ) {
    // see https://solidity.readthedocs.io/en/v0.5.6/control-structures.html?highlight=require
    if ( b.size() <= 4 + 32 + 32 || b[0] != 0x08 || b[1] != 0xc3 || b[2] != 0x79 || b[3] != 0xa0 )
        return std::string( "" );
    int offset = 4 + 32 + ntohl( *( ( int* ) ( b.data() + 32 ) ) );
    int length = ntohl( *( ( int* ) ( b.data() + 64 ) ) );
    char buf[length + 1];
    buf[length] = 0;
    std::copy( b.begin() + offset, b.begin() + offset + length, buf );
    return std::string( buf );
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

};  // namespace eth


};  // namespace skutils
